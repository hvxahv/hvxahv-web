import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import {useRouter} from "next/router";
import {Key, ReactChild, ReactFragment, ReactPortal, useEffect, useState} from "react";

const Inbox: NextPage = () => {
  const [inboxes, setInboxes] = useState<any>([])
  useEffect(() => {
    const token = localStorage.getItem("hvxahv_login_token")
    const myHeaders = new Headers();
    myHeaders.append("Authorization", `Bearer ${token}`)

    const requestOptions = {
      method: 'GET',
      headers: myHeaders,
      redirect: 'follow'
    };

    // @ts-ignore
    fetch("http://localhost:8088/api/v1/inbox", requestOptions)
      .then(res => res.json())
      .then(res => {
        setInboxes(res.inboxes)
      })
      .catch(error => console.log('error', error));
  }, [])

  const router = useRouter()
  return (
    <div className={styles.container}>
      <Head>
        <title>INBOX</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <main className={styles.main}>
        {inboxes && inboxes.map((i: {
          id: string;
          from: {} | null | undefined;
          activity_type: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined;
          activity_id: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined;
          }, idx: Key | null | undefined) => {
          return (
            <div key={idx}>
              <div>
                {i.from == "" ? <span>anonymous</span> : <span>{i.from}</span>} -{'>'} {i.activity_type} REQUEST: {i.id}
                {i.activity_type == "Follow" ?ã€€<><button>AGREE</button> / <button>REJECT</button></>: null}
              </div>
              <hr/>
            </div>
          )
        })}
      </main>
    </div>
)
}

export default Inbox
